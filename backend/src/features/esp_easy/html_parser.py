import re
from typing import List
from bs4 import BeautifulSoup

from features.esp_easy.esp_easy_model import Controller


def correct_html_code(html: str):
    """Corrects HTML generated by EspEasy devices.
    It ommits closing tags.
    """
    pat = r"(?<!<tr>)(?<!</td>)(\s*<td>)"
    repl = r"</td>\1"
    html = re.sub(pat, repl, html, flags=re.IGNORECASE)
    pat = r"(?<!<table>)(?<!</tr>)(\s*<tr>)"
    repl = r"</tr>\1"
    html = re.sub(pat, repl, html, flags=re.IGNORECASE)
    return html


class HtmlParser:
    """Parser for HTML generated by ESPEasy devices."""
    def __init__(self, html):
        html = correct_html_code(html)
        self.soup = BeautifulSoup(html, "html.parser")

    def parse_controllers(self) -> List[Controller]:
        """Parse the controllers from the HTML."""
        controllers = []
        self.soup.find_all("table")
        table = self.soup.find("table")
        for no, row in enumerate(table.find_all("tr")):
            children = list(row.children)
            if children[0].name == "td":
                controllers.append(
                    Controller(
                        controller_no=no,
                        enabled=children[2].text == "âœ”",
                        protocol=children[3].text,
                        host=children[4].text,
                        port=int(children[5].text) if children[5].text else None,
                    )
                )
        return controllers

    def parse_sensors(self):
        sensors = []

        return sensors
